name: Deploy to Vercel to PR

on:
  push:
    branches-ignore:
      - main
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  semgrep:
    runs-on: ubuntu-latest
 
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
 
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'
 
      - name: Install Semgrep
        run: |
          python -m pip install --upgrade pip
          pip install semgrep
 
      - name: Run Semgrep
        run: semgrep --config .semgrep.yml --error --metrics=off
 
      - name: Archive Semgrep results
        if: failure()
        uses: actions/upload-artifact@v3
        with:
          name: semgrep-results
          path: semgrep.sarif
 
      - name: Display Semgrep results
        if: failure()
        run: |
          cat semgrep.sarif
          echo "erreur XSS detectée" > xss_error.txt
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '16'

      - name: Deploy to Vercel
        id: deploy
        run: vercel --token ${{ secrets.VERCEL_TOKEN }} --scope ${{ secrets.VERCEL_ORG_ID }} --prod --yes
        env:
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

      - name: Get deployment URL
        id: deployment_info
        run: |
          DEPLOYMENT_URL=$(vercel inspect --token ${{ secrets.VERCEL_TOKEN }} --output json | jq -r .url)
          echo "url=${DEPLOYMENT_URL}" >> $GITHUB_ENV

      - name: Comment on PR
        uses: actions/github-script@v3
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const url = process.env.url;
            github.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body: `Preview available at: [${url}](${url})`
            });
  
    deploy:
    runs-on: ubuntu-latest
    needs: semgrep
    if: github.event_name == 'pull_request' && needs.semgrep.result == 'success'
 
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
 
      - name: Install Vercel CLI
        run: npm install -g vercel
 
      - name: Deploy to Vercel
        run: |
          vercel link --yes --project ${{ secrets.VERCEL_PROJECT_ID }} --scope ${{ secrets.VERCEL_ORG_ID }} --token ${{ secrets.VERCEL_TOKEN }}
          echo "PREVIEW_URL=$(vercel --cwd ./ --token ${{ secrets.VERCEL_TOKEN }})" >> $GITHUB_ENV
 
      - name: Add PR comment
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const previewUrl = process.env.PREVIEW_URL;
            await github.rest.issues.createComment({
              issue_number: context.payload.pull_request.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: previewUrl ? `Preview build URL: ${previewUrl}` : `Erreur XSS détectée`
            })
